/**
 * MLflow API Request/Response Specifications
 *
 * This module defines the types and interfaces for MLflow API communication,
 * including request payloads and response structures for all trace-related endpoints.
 */
import type { TraceInfo } from '../core/entities/trace_info';
import { ArtifactCredentialType } from './artifacts/databricks';
/**
 * Create a new TraceInfo entity in the backend.
 */
export declare namespace StartTraceV3 {
    const getEndpoint: (host: string) => string;
    interface Request {
        trace: {
            trace_info: Parameters<typeof TraceInfo.fromJson>[0];
        };
    }
    interface Response {
        trace: {
            trace_info: Parameters<typeof TraceInfo.fromJson>[0];
        };
    }
}
/**
 * Get the TraceInfo entity for a given trace ID.
 */
export declare namespace GetTraceInfoV3 {
    const getEndpoint: (host: string, traceId: string) => string;
    interface Response {
        trace: {
            trace_info: Parameters<typeof TraceInfo.fromJson>[0];
        };
    }
}
/** Create Experiment (used for testing) */
export declare namespace CreateExperiment {
    const getEndpoint: (host: string) => string;
    interface Request {
        name?: string;
        artifact_location?: string;
        tags?: Record<string, string>;
    }
    interface Response {
        experiment_id: string;
    }
}
/** Delete Experiment (used for testing) */
export declare namespace DeleteExperiment {
    const getEndpoint: (host: string) => string;
    interface Request {
        experiment_id: string;
    }
}
/**
 * Get credentials for uploading trace data to the artifact store. Only used for Databricks.
 */
export declare namespace GetCredentialsForTraceDataUpload {
    const getEndpoint: (host: string, traceId: string) => string;
    interface Response {
        credential_info: {
            type: ArtifactCredentialType;
            signed_uri: string;
        };
    }
}
/**
 * Get credentials for downloading trace data from the artifact store. Only used for Databricks.
 */
export declare namespace GetCredentialsForTraceDataDownload {
    const getEndpoint: (host: string, traceId: string) => string;
    interface Response {
        credential_info: {
            type: ArtifactCredentialType;
            signed_uri: string;
        };
    }
}
